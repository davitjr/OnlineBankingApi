// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/ArcaCard.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ArcaCardAttachmentService {

  /// <summary>Holder for reflection information generated from Protos/ArcaCard.proto</summary>
  public static partial class ArcaCardReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/ArcaCard.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ArcaCardReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVQcm90b3MvQXJjYUNhcmQucHJvdG8SCEFyY2FDYXJkGh5nb29nbGUvcHJv",
            "dG9idWYvd3JhcHBlcnMucHJvdG8ilgIKFUNhcmRBdHRhY2htZW50UmVxdWVz",
            "dBIKCgJJRBgBIAEoBRIOCgZVc2VySWQYAiABKAUSFgoOQ3VzdG9tZXJOdW1i",
            "ZXIYAyABKAQSDwoHTWRPcmRlchgEIAEoCRISCgpDYXJkTnVtYmVyGAUgASgE",
            "EhIKCkV4cGlyZVllYXIYBiABKAkSEwoLRXhwaXJlTW9udGgYByABKAkSFgoO",
            "Q2FyZEhvbGRlck5hbWUYCCABKAkSEQoJQmluZGluZ0lkGAkgASgJEg4KBkJh",
            "bmtJZBgKIAEoBRIPCgdRdWFsaXR5GAsgASgFEhAKCExhbmd1YWdlGAwgASgJ",
            "EhAKCFBhZ2VWaWV3GA0gASgJEgsKA0N2YxgOIAEoBSKjAQoWQ2FyZEF0dGFj",
            "aG1lbnRSZXNwb25zZRIuCghSZWRpcmVjdBgBIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRIsCgZBY3NVcmwYAiABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSKwoFUGFSZXEYAyABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUiQgofQ2FyZEF0dGFjaG1lbnRDb21wbGV0aW9u",
            "UmVxdWVzdBIOCgZVc2VySWQYASABKAUSDwoHTWRPcmRlchgCIAEoCSI0CiBD",
            "YXJkQXR0YWNobWVudENvbXBsZXRpb25SZXNwb25zZRIQCghBdHRhY2hlZBgB",
            "IAEoCCInChlEZWxldGVBdHRhY2hlZENhcmRSZXF1ZXN0EgoKAklkGAEgASgF",
            "Ii0KGkRlbGV0ZUF0dGFjaGVkQ2FyZFJlc3BvbnNlEg8KB0RlbGV0ZWQYASAB",
            "KAgiJQoTQXR0YWNoZWRDYXJkUmVxdWVzdBIOCgZVc2VySWQYASABKAUiRQoU",
            "QXR0YWNoZWRDYXJkUmVzcG9uc2USLQoNQXR0YWNoZWRDYXJkcxgBIAMoCzIW",
            "LkFyY2FDYXJkLkF0dGFjaGVkQ2FyZCJyCgxBdHRhY2hlZENhcmQSCgoCSWQY",
            "ASABKAUSEgoKQ2FyZE51bWJlchgCIAEoCRIWCg5DYXJkSG9sZGVyTmFtZRgD",
            "IAEoCRIYChBFeHBpcmVEYXRlU3RyaW5nGAQgASgJEhAKCEJhbmtOYW1lGAUg",
            "ASgJIi8KHUF0dGFjaGVkQ2FyZFZhbGlkYXRpb25SZXF1ZXN0Eg4KBlVzZXJJ",
            "ZBgBIAEoBSJCCh5BdHRhY2hlZENhcmRWYWxpZGF0aW9uUmVzcG9uc2USDwoH",
            "SXNWYWxpZBgBIAEoCBIPCgdNZXNzYWdlGAIgASgJIsUDChlDYXJkQmluZGlu",
            "Z1BheW1lbnRSZXF1ZXN0Eg8KB01kT3JkZXIYASABKAkSEQoJQmluZGluZ0lk",
            "GAIgASgJEhAKCExhbmd1YWdlGAMgASgJEg4KBlVzZXJJZBgEIAEoBRIOCgZB",
            "bW91bnQYBSABKAUSEAoIUGFnZVZpZXcYBiABKAkSFgoOQ3VzdG9tZXJOdW1i",
            "ZXIYByABKAQSEAoIQ3VycmVuY3kYCCABKAkSRAoJT3JkZXJUeXBlGAkgASgO",
            "MjEuQXJjYUNhcmQuQ2FyZEJpbmRpbmdQYXltZW50UmVxdWVzdC5PcmRlclR5",
            "cGVFbnVtEhQKDE9yZGVyU3ViVHlwZRgKIAEoBSK5AQoNT3JkZXJUeXBlRW51",
            "bRIeChpPUkRFUl9UWVBFX0VOVU1fTm90RGVmaW5lZBAAEh4KGk9SREVSX1RZ",
            "UEVfRU5VTV9SYVRyYW5zZmVyEAESHgoaT1JERVJfVFlQRV9FTlVNX0xvYW5N",
            "YXR1cmUQAhIjCh9PUkRFUl9UWVBFX0VOVU1fQ29tbXVuYWxQYXltZW50EAMS",
            "IwofT1JERVJfVFlQRV9FTlVNX0NhcmRUb0NhcmRPcmRlchAEIkwKGkNhcmRC",
            "aW5kaW5nUGF5bWVudFJlc3BvbnNlEg0KBVBheWVkGAEgASgIEg4KBkNhcmRJ",
            "ZBgCIAEoBRIPCgdNZE9yZGVyGAMgASgJIlkKHEF0dGFjaGVkQ2FyZE9yZGVy",
            "VHlwZVJlcXVlc3QSEQoJT3JkZXJUeXBlGAEgASgFEhQKDE9yZGVyU3ViVHlw",
            "ZRgCIAEoBRIQCghDdXJyZW5jeRgDIAEoCSI5CiBBY2NvdW50TnVtYmVyQnlP",
            "cmRlclR5cGVSZXNwb25zZRIVCg1BY2NvdW50TnVtYmVyGAEgASgJIkUKE09y",
            "ZGVyRGV0YWlsc1JlcXVlc3QSDQoFRG9jSUQYASABKAMSDgoGQ2FyZElkGAIg",
            "ASgFEg8KB01kT3JkZXIYAyABKAkiJQoUT3JkZXJEZXRhaWxzUmVzcG9uc2US",
            "DQoFU2F2ZWQYASABKAgiNgoTUmV2ZXJzZU9yZGVyUmVxdWVzdBIPCgdNZE9y",
            "ZGVyGAEgASgJEg4KBlVzZXJJZBgCIAEoBSIoChRSZXZlcnNlT3JkZXJSZXNw",
            "b25zZRIQCghSZXZlcnNlZBgBIAEoCDKJBwoIQXJjYUNhcmQSUwoOQXRhY2hD",
            "YXJkT3JkZXISHy5BcmNhQ2FyZC5DYXJkQXR0YWNobWVudFJlcXVlc3QaIC5B",
            "cmNhQ2FyZC5DYXJkQXR0YWNobWVudFJlc3BvbnNlEnEKGEF0YWNoQ2FyZE9y",
            "ZGVyQ29tcGxldGlvbhIpLkFyY2FDYXJkLkNhcmRBdHRhY2htZW50Q29tcGxl",
            "dGlvblJlcXVlc3QaKi5BcmNhQ2FyZC5DYXJkQXR0YWNobWVudENvbXBsZXRp",
            "b25SZXNwb25zZRJjChZEZWxldGVBdHRhY2hlZENhcmRCeUlkEiMuQXJjYUNh",
            "cmQuRGVsZXRlQXR0YWNoZWRDYXJkUmVxdWVzdBokLkFyY2FDYXJkLkRlbGV0",
            "ZUF0dGFjaGVkQ2FyZFJlc3BvbnNlElEKEEdldEF0dGFjaGVkQ2FyZHMSHS5B",
            "cmNhQ2FyZC5BdHRhY2hlZENhcmRSZXF1ZXN0Gh4uQXJjYUNhcmQuQXR0YWNo",
            "ZWRDYXJkUmVzcG9uc2USagoVVmFsaWRhdGVBdHRhY2hlZENhcmRzEicuQXJj",
            "YUNhcmQuQXR0YWNoZWRDYXJkVmFsaWRhdGlvblJlcXVlc3QaKC5BcmNhQ2Fy",
            "ZC5BdHRhY2hlZENhcmRWYWxpZGF0aW9uUmVzcG9uc2USZAoXQXJjYU9yZGVy",
            "QmluZGluZ1BheW1lbnQSIy5BcmNhQ2FyZC5DYXJkQmluZGluZ1BheW1lbnRS",
            "ZXF1ZXN0GiQuQXJjYUNhcmQuQ2FyZEJpbmRpbmdQYXltZW50UmVzcG9uc2US",
            "eQojR2V0TWVyY2hhbnRBY2NvdW50TnVtYmVyQnlPcmRlclR5cGUSJi5BcmNh",
            "Q2FyZC5BdHRhY2hlZENhcmRPcmRlclR5cGVSZXF1ZXN0GiouQXJjYUNhcmQu",
            "QWNjb3VudE51bWJlckJ5T3JkZXJUeXBlUmVzcG9uc2USXQocU2F2ZUF0dGFj",
            "aGVkQ2FyZE9yZGVyRGV0YWlscxIdLkFyY2FDYXJkLk9yZGVyRGV0YWlsc1Jl",
            "cXVlc3QaHi5BcmNhQ2FyZC5PcmRlckRldGFpbHNSZXNwb25zZRJRChBSZXZl",
            "cnNlT3JkZXJCeUlkEh0uQXJjYUNhcmQuUmV2ZXJzZU9yZGVyUmVxdWVzdBoe",
            "LkFyY2FDYXJkLlJldmVyc2VPcmRlclJlc3BvbnNlQhyqAhlBcmNhQ2FyZEF0",
            "dGFjaG1lbnRTZXJ2aWNlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.CardAttachmentRequest), global::ArcaCardAttachmentService.CardAttachmentRequest.Parser, new[]{ "ID", "UserId", "CustomerNumber", "MdOrder", "CardNumber", "ExpireYear", "ExpireMonth", "CardHolderName", "BindingId", "BankId", "Quality", "Language", "PageView", "Cvc" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.CardAttachmentResponse), global::ArcaCardAttachmentService.CardAttachmentResponse.Parser, new[]{ "Redirect", "AcsUrl", "PaReq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.CardAttachmentCompletionRequest), global::ArcaCardAttachmentService.CardAttachmentCompletionRequest.Parser, new[]{ "UserId", "MdOrder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.CardAttachmentCompletionResponse), global::ArcaCardAttachmentService.CardAttachmentCompletionResponse.Parser, new[]{ "Attached" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.DeleteAttachedCardRequest), global::ArcaCardAttachmentService.DeleteAttachedCardRequest.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.DeleteAttachedCardResponse), global::ArcaCardAttachmentService.DeleteAttachedCardResponse.Parser, new[]{ "Deleted" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.AttachedCardRequest), global::ArcaCardAttachmentService.AttachedCardRequest.Parser, new[]{ "UserId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.AttachedCardResponse), global::ArcaCardAttachmentService.AttachedCardResponse.Parser, new[]{ "AttachedCards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.AttachedCard), global::ArcaCardAttachmentService.AttachedCard.Parser, new[]{ "Id", "CardNumber", "CardHolderName", "ExpireDateString", "BankName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.AttachedCardValidationRequest), global::ArcaCardAttachmentService.AttachedCardValidationRequest.Parser, new[]{ "UserId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.AttachedCardValidationResponse), global::ArcaCardAttachmentService.AttachedCardValidationResponse.Parser, new[]{ "IsValid", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.CardBindingPaymentRequest), global::ArcaCardAttachmentService.CardBindingPaymentRequest.Parser, new[]{ "MdOrder", "BindingId", "Language", "UserId", "Amount", "PageView", "CustomerNumber", "Currency", "OrderType", "OrderSubType" }, null, new[]{ typeof(global::ArcaCardAttachmentService.CardBindingPaymentRequest.Types.OrderTypeEnum) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.CardBindingPaymentResponse), global::ArcaCardAttachmentService.CardBindingPaymentResponse.Parser, new[]{ "Payed", "CardId", "MdOrder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.AttachedCardOrderTypeRequest), global::ArcaCardAttachmentService.AttachedCardOrderTypeRequest.Parser, new[]{ "OrderType", "OrderSubType", "Currency" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.AccountNumberByOrderTypeResponse), global::ArcaCardAttachmentService.AccountNumberByOrderTypeResponse.Parser, new[]{ "AccountNumber" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.OrderDetailsRequest), global::ArcaCardAttachmentService.OrderDetailsRequest.Parser, new[]{ "DocID", "CardId", "MdOrder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.OrderDetailsResponse), global::ArcaCardAttachmentService.OrderDetailsResponse.Parser, new[]{ "Saved" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.ReverseOrderRequest), global::ArcaCardAttachmentService.ReverseOrderRequest.Parser, new[]{ "MdOrder", "UserId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ArcaCardAttachmentService.ReverseOrderResponse), global::ArcaCardAttachmentService.ReverseOrderResponse.Parser, new[]{ "Reversed" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The request message containing the attach request model
  /// </summary>
  public sealed partial class CardAttachmentRequest : pb::IMessage<CardAttachmentRequest> {
    private static readonly pb::MessageParser<CardAttachmentRequest> _parser = new pb::MessageParser<CardAttachmentRequest>(() => new CardAttachmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAttachmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAttachmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAttachmentRequest(CardAttachmentRequest other) : this() {
      iD_ = other.iD_;
      userId_ = other.userId_;
      customerNumber_ = other.customerNumber_;
      mdOrder_ = other.mdOrder_;
      cardNumber_ = other.cardNumber_;
      expireYear_ = other.expireYear_;
      expireMonth_ = other.expireMonth_;
      cardHolderName_ = other.cardHolderName_;
      bindingId_ = other.bindingId_;
      bankId_ = other.bankId_;
      quality_ = other.quality_;
      language_ = other.language_;
      pageView_ = other.pageView_;
      cvc_ = other.cvc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAttachmentRequest Clone() {
      return new CardAttachmentRequest(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "CustomerNumber" field.</summary>
    public const int CustomerNumberFieldNumber = 3;
    private ulong customerNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CustomerNumber {
      get { return customerNumber_; }
      set {
        customerNumber_ = value;
      }
    }

    /// <summary>Field number for the "MdOrder" field.</summary>
    public const int MdOrderFieldNumber = 4;
    private string mdOrder_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MdOrder {
      get { return mdOrder_; }
      set {
        mdOrder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CardNumber" field.</summary>
    public const int CardNumberFieldNumber = 5;
    private ulong cardNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CardNumber {
      get { return cardNumber_; }
      set {
        cardNumber_ = value;
      }
    }

    /// <summary>Field number for the "ExpireYear" field.</summary>
    public const int ExpireYearFieldNumber = 6;
    private string expireYear_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpireYear {
      get { return expireYear_; }
      set {
        expireYear_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExpireMonth" field.</summary>
    public const int ExpireMonthFieldNumber = 7;
    private string expireMonth_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpireMonth {
      get { return expireMonth_; }
      set {
        expireMonth_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CardHolderName" field.</summary>
    public const int CardHolderNameFieldNumber = 8;
    private string cardHolderName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardHolderName {
      get { return cardHolderName_; }
      set {
        cardHolderName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BindingId" field.</summary>
    public const int BindingIdFieldNumber = 9;
    private string bindingId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BindingId {
      get { return bindingId_; }
      set {
        bindingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BankId" field.</summary>
    public const int BankIdFieldNumber = 10;
    private int bankId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BankId {
      get { return bankId_; }
      set {
        bankId_ = value;
      }
    }

    /// <summary>Field number for the "Quality" field.</summary>
    public const int QualityFieldNumber = 11;
    private int quality_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quality {
      get { return quality_; }
      set {
        quality_ = value;
      }
    }

    /// <summary>Field number for the "Language" field.</summary>
    public const int LanguageFieldNumber = 12;
    private string language_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PageView" field.</summary>
    public const int PageViewFieldNumber = 13;
    private string pageView_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageView {
      get { return pageView_; }
      set {
        pageView_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cvc" field.</summary>
    public const int CvcFieldNumber = 14;
    private int cvc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cvc {
      get { return cvc_; }
      set {
        cvc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAttachmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAttachmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (UserId != other.UserId) return false;
      if (CustomerNumber != other.CustomerNumber) return false;
      if (MdOrder != other.MdOrder) return false;
      if (CardNumber != other.CardNumber) return false;
      if (ExpireYear != other.ExpireYear) return false;
      if (ExpireMonth != other.ExpireMonth) return false;
      if (CardHolderName != other.CardHolderName) return false;
      if (BindingId != other.BindingId) return false;
      if (BankId != other.BankId) return false;
      if (Quality != other.Quality) return false;
      if (Language != other.Language) return false;
      if (PageView != other.PageView) return false;
      if (Cvc != other.Cvc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID != 0) hash ^= ID.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (CustomerNumber != 0UL) hash ^= CustomerNumber.GetHashCode();
      if (MdOrder.Length != 0) hash ^= MdOrder.GetHashCode();
      if (CardNumber != 0UL) hash ^= CardNumber.GetHashCode();
      if (ExpireYear.Length != 0) hash ^= ExpireYear.GetHashCode();
      if (ExpireMonth.Length != 0) hash ^= ExpireMonth.GetHashCode();
      if (CardHolderName.Length != 0) hash ^= CardHolderName.GetHashCode();
      if (BindingId.Length != 0) hash ^= BindingId.GetHashCode();
      if (BankId != 0) hash ^= BankId.GetHashCode();
      if (Quality != 0) hash ^= Quality.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (PageView.Length != 0) hash ^= PageView.GetHashCode();
      if (Cvc != 0) hash ^= Cvc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ID);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (CustomerNumber != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(CustomerNumber);
      }
      if (MdOrder.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MdOrder);
      }
      if (CardNumber != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CardNumber);
      }
      if (ExpireYear.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ExpireYear);
      }
      if (ExpireMonth.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ExpireMonth);
      }
      if (CardHolderName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CardHolderName);
      }
      if (BindingId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(BindingId);
      }
      if (BankId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(BankId);
      }
      if (Quality != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Quality);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Language);
      }
      if (PageView.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(PageView);
      }
      if (Cvc != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Cvc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (CustomerNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CustomerNumber);
      }
      if (MdOrder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MdOrder);
      }
      if (CardNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CardNumber);
      }
      if (ExpireYear.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpireYear);
      }
      if (ExpireMonth.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpireMonth);
      }
      if (CardHolderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardHolderName);
      }
      if (BindingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BindingId);
      }
      if (BankId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BankId);
      }
      if (Quality != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quality);
      }
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (PageView.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageView);
      }
      if (Cvc != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cvc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAttachmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.CustomerNumber != 0UL) {
        CustomerNumber = other.CustomerNumber;
      }
      if (other.MdOrder.Length != 0) {
        MdOrder = other.MdOrder;
      }
      if (other.CardNumber != 0UL) {
        CardNumber = other.CardNumber;
      }
      if (other.ExpireYear.Length != 0) {
        ExpireYear = other.ExpireYear;
      }
      if (other.ExpireMonth.Length != 0) {
        ExpireMonth = other.ExpireMonth;
      }
      if (other.CardHolderName.Length != 0) {
        CardHolderName = other.CardHolderName;
      }
      if (other.BindingId.Length != 0) {
        BindingId = other.BindingId;
      }
      if (other.BankId != 0) {
        BankId = other.BankId;
      }
      if (other.Quality != 0) {
        Quality = other.Quality;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.PageView.Length != 0) {
        PageView = other.PageView;
      }
      if (other.Cvc != 0) {
        Cvc = other.Cvc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ID = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 24: {
            CustomerNumber = input.ReadUInt64();
            break;
          }
          case 34: {
            MdOrder = input.ReadString();
            break;
          }
          case 40: {
            CardNumber = input.ReadUInt64();
            break;
          }
          case 50: {
            ExpireYear = input.ReadString();
            break;
          }
          case 58: {
            ExpireMonth = input.ReadString();
            break;
          }
          case 66: {
            CardHolderName = input.ReadString();
            break;
          }
          case 74: {
            BindingId = input.ReadString();
            break;
          }
          case 80: {
            BankId = input.ReadInt32();
            break;
          }
          case 88: {
            Quality = input.ReadInt32();
            break;
          }
          case 98: {
            Language = input.ReadString();
            break;
          }
          case 106: {
            PageView = input.ReadString();
            break;
          }
          case 112: {
            Cvc = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the register response model
  /// </summary>
  public sealed partial class CardAttachmentResponse : pb::IMessage<CardAttachmentResponse> {
    private static readonly pb::MessageParser<CardAttachmentResponse> _parser = new pb::MessageParser<CardAttachmentResponse>(() => new CardAttachmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAttachmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAttachmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAttachmentResponse(CardAttachmentResponse other) : this() {
      Redirect = other.Redirect;
      AcsUrl = other.AcsUrl;
      PaReq = other.PaReq;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAttachmentResponse Clone() {
      return new CardAttachmentResponse(this);
    }

    /// <summary>Field number for the "Redirect" field.</summary>
    public const int RedirectFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _single_redirect_codec = pb::FieldCodec.ForClassWrapper<string>(10);
    private string redirect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Redirect {
      get { return redirect_; }
      set {
        redirect_ = value;
      }
    }


    /// <summary>Field number for the "AcsUrl" field.</summary>
    public const int AcsUrlFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_acsUrl_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string acsUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AcsUrl {
      get { return acsUrl_; }
      set {
        acsUrl_ = value;
      }
    }


    /// <summary>Field number for the "PaReq" field.</summary>
    public const int PaReqFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _single_paReq_codec = pb::FieldCodec.ForClassWrapper<string>(26);
    private string paReq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaReq {
      get { return paReq_; }
      set {
        paReq_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAttachmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAttachmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Redirect != other.Redirect) return false;
      if (AcsUrl != other.AcsUrl) return false;
      if (PaReq != other.PaReq) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (redirect_ != null) hash ^= Redirect.GetHashCode();
      if (acsUrl_ != null) hash ^= AcsUrl.GetHashCode();
      if (paReq_ != null) hash ^= PaReq.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (redirect_ != null) {
        _single_redirect_codec.WriteTagAndValue(output, Redirect);
      }
      if (acsUrl_ != null) {
        _single_acsUrl_codec.WriteTagAndValue(output, AcsUrl);
      }
      if (paReq_ != null) {
        _single_paReq_codec.WriteTagAndValue(output, PaReq);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (redirect_ != null) {
        size += _single_redirect_codec.CalculateSizeWithTag(Redirect);
      }
      if (acsUrl_ != null) {
        size += _single_acsUrl_codec.CalculateSizeWithTag(AcsUrl);
      }
      if (paReq_ != null) {
        size += _single_paReq_codec.CalculateSizeWithTag(PaReq);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAttachmentResponse other) {
      if (other == null) {
        return;
      }
      if (other.redirect_ != null) {
        if (redirect_ == null || other.Redirect != "") {
          Redirect = other.Redirect;
        }
      }
      if (other.acsUrl_ != null) {
        if (acsUrl_ == null || other.AcsUrl != "") {
          AcsUrl = other.AcsUrl;
        }
      }
      if (other.paReq_ != null) {
        if (paReq_ == null || other.PaReq != "") {
          PaReq = other.PaReq;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            string value = _single_redirect_codec.Read(input);
            if (redirect_ == null || value != "") {
              Redirect = value;
            }
            break;
          }
          case 18: {
            string value = _single_acsUrl_codec.Read(input);
            if (acsUrl_ == null || value != "") {
              AcsUrl = value;
            }
            break;
          }
          case 26: {
            string value = _single_paReq_codec.Read(input);
            if (paReq_ == null || value != "") {
              PaReq = value;
            }
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the register completion response model
  /// </summary>
  public sealed partial class CardAttachmentCompletionRequest : pb::IMessage<CardAttachmentCompletionRequest> {
    private static readonly pb::MessageParser<CardAttachmentCompletionRequest> _parser = new pb::MessageParser<CardAttachmentCompletionRequest>(() => new CardAttachmentCompletionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAttachmentCompletionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAttachmentCompletionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAttachmentCompletionRequest(CardAttachmentCompletionRequest other) : this() {
      userId_ = other.userId_;
      mdOrder_ = other.mdOrder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAttachmentCompletionRequest Clone() {
      return new CardAttachmentCompletionRequest(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "MdOrder" field.</summary>
    public const int MdOrderFieldNumber = 2;
    private string mdOrder_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MdOrder {
      get { return mdOrder_; }
      set {
        mdOrder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAttachmentCompletionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAttachmentCompletionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (MdOrder != other.MdOrder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (MdOrder.Length != 0) hash ^= MdOrder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (MdOrder.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MdOrder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (MdOrder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MdOrder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAttachmentCompletionRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.MdOrder.Length != 0) {
        MdOrder = other.MdOrder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
          case 18: {
            MdOrder = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the register completion response model
  /// </summary>
  public sealed partial class CardAttachmentCompletionResponse : pb::IMessage<CardAttachmentCompletionResponse> {
    private static readonly pb::MessageParser<CardAttachmentCompletionResponse> _parser = new pb::MessageParser<CardAttachmentCompletionResponse>(() => new CardAttachmentCompletionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardAttachmentCompletionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAttachmentCompletionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAttachmentCompletionResponse(CardAttachmentCompletionResponse other) : this() {
      attached_ = other.attached_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardAttachmentCompletionResponse Clone() {
      return new CardAttachmentCompletionResponse(this);
    }

    /// <summary>Field number for the "Attached" field.</summary>
    public const int AttachedFieldNumber = 1;
    private bool attached_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Attached {
      get { return attached_; }
      set {
        attached_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardAttachmentCompletionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardAttachmentCompletionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Attached != other.Attached) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Attached != false) hash ^= Attached.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Attached != false) {
        output.WriteRawTag(8);
        output.WriteBool(Attached);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Attached != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardAttachmentCompletionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Attached != false) {
        Attached = other.Attached;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Attached = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteAttachedCardRequest : pb::IMessage<DeleteAttachedCardRequest> {
    private static readonly pb::MessageParser<DeleteAttachedCardRequest> _parser = new pb::MessageParser<DeleteAttachedCardRequest>(() => new DeleteAttachedCardRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteAttachedCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAttachedCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAttachedCardRequest(DeleteAttachedCardRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAttachedCardRequest Clone() {
      return new DeleteAttachedCardRequest(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteAttachedCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteAttachedCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteAttachedCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the register completion response model
  /// </summary>
  public sealed partial class DeleteAttachedCardResponse : pb::IMessage<DeleteAttachedCardResponse> {
    private static readonly pb::MessageParser<DeleteAttachedCardResponse> _parser = new pb::MessageParser<DeleteAttachedCardResponse>(() => new DeleteAttachedCardResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteAttachedCardResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAttachedCardResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAttachedCardResponse(DeleteAttachedCardResponse other) : this() {
      deleted_ = other.deleted_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAttachedCardResponse Clone() {
      return new DeleteAttachedCardResponse(this);
    }

    /// <summary>Field number for the "Deleted" field.</summary>
    public const int DeletedFieldNumber = 1;
    private bool deleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deleted {
      get { return deleted_; }
      set {
        deleted_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteAttachedCardResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteAttachedCardResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Deleted != other.Deleted) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Deleted != false) hash ^= Deleted.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Deleted != false) {
        output.WriteRawTag(8);
        output.WriteBool(Deleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Deleted != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteAttachedCardResponse other) {
      if (other == null) {
        return;
      }
      if (other.Deleted != false) {
        Deleted = other.Deleted;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Deleted = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttachedCardRequest : pb::IMessage<AttachedCardRequest> {
    private static readonly pb::MessageParser<AttachedCardRequest> _parser = new pb::MessageParser<AttachedCardRequest>(() => new AttachedCardRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachedCardRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardRequest(AttachedCardRequest other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardRequest Clone() {
      return new AttachedCardRequest(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachedCardRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachedCardRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachedCardRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttachedCardResponse : pb::IMessage<AttachedCardResponse> {
    private static readonly pb::MessageParser<AttachedCardResponse> _parser = new pb::MessageParser<AttachedCardResponse>(() => new AttachedCardResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachedCardResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardResponse(AttachedCardResponse other) : this() {
      attachedCards_ = other.attachedCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardResponse Clone() {
      return new AttachedCardResponse(this);
    }

    /// <summary>Field number for the "AttachedCards" field.</summary>
    public const int AttachedCardsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ArcaCardAttachmentService.AttachedCard> _repeated_attachedCards_codec
        = pb::FieldCodec.ForMessage(10, global::ArcaCardAttachmentService.AttachedCard.Parser);
    private readonly pbc::RepeatedField<global::ArcaCardAttachmentService.AttachedCard> attachedCards_ = new pbc::RepeatedField<global::ArcaCardAttachmentService.AttachedCard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ArcaCardAttachmentService.AttachedCard> AttachedCards {
      get { return attachedCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachedCardResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachedCardResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!attachedCards_.Equals(other.attachedCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= attachedCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      attachedCards_.WriteTo(output, _repeated_attachedCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += attachedCards_.CalculateSize(_repeated_attachedCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachedCardResponse other) {
      if (other == null) {
        return;
      }
      attachedCards_.Add(other.attachedCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            attachedCards_.AddEntriesFrom(input, _repeated_attachedCards_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttachedCard : pb::IMessage<AttachedCard> {
    private static readonly pb::MessageParser<AttachedCard> _parser = new pb::MessageParser<AttachedCard>(() => new AttachedCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachedCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCard(AttachedCard other) : this() {
      id_ = other.id_;
      cardNumber_ = other.cardNumber_;
      cardHolderName_ = other.cardHolderName_;
      expireDateString_ = other.expireDateString_;
      bankName_ = other.bankName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCard Clone() {
      return new AttachedCard(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "CardNumber" field.</summary>
    public const int CardNumberFieldNumber = 2;
    private string cardNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardNumber {
      get { return cardNumber_; }
      set {
        cardNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CardHolderName" field.</summary>
    public const int CardHolderNameFieldNumber = 3;
    private string cardHolderName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardHolderName {
      get { return cardHolderName_; }
      set {
        cardHolderName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExpireDateString" field.</summary>
    public const int ExpireDateStringFieldNumber = 4;
    private string expireDateString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpireDateString {
      get { return expireDateString_; }
      set {
        expireDateString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BankName" field.</summary>
    public const int BankNameFieldNumber = 5;
    private string bankName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BankName {
      get { return bankName_; }
      set {
        bankName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachedCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachedCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CardNumber != other.CardNumber) return false;
      if (CardHolderName != other.CardHolderName) return false;
      if (ExpireDateString != other.ExpireDateString) return false;
      if (BankName != other.BankName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CardNumber.Length != 0) hash ^= CardNumber.GetHashCode();
      if (CardHolderName.Length != 0) hash ^= CardHolderName.GetHashCode();
      if (ExpireDateString.Length != 0) hash ^= ExpireDateString.GetHashCode();
      if (BankName.Length != 0) hash ^= BankName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CardNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CardNumber);
      }
      if (CardHolderName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CardHolderName);
      }
      if (ExpireDateString.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExpireDateString);
      }
      if (BankName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BankName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CardNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardNumber);
      }
      if (CardHolderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardHolderName);
      }
      if (ExpireDateString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpireDateString);
      }
      if (BankName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BankName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachedCard other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CardNumber.Length != 0) {
        CardNumber = other.CardNumber;
      }
      if (other.CardHolderName.Length != 0) {
        CardHolderName = other.CardHolderName;
      }
      if (other.ExpireDateString.Length != 0) {
        ExpireDateString = other.ExpireDateString;
      }
      if (other.BankName.Length != 0) {
        BankName = other.BankName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            CardNumber = input.ReadString();
            break;
          }
          case 26: {
            CardHolderName = input.ReadString();
            break;
          }
          case 34: {
            ExpireDateString = input.ReadString();
            break;
          }
          case 42: {
            BankName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttachedCardValidationRequest : pb::IMessage<AttachedCardValidationRequest> {
    private static readonly pb::MessageParser<AttachedCardValidationRequest> _parser = new pb::MessageParser<AttachedCardValidationRequest>(() => new AttachedCardValidationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachedCardValidationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardValidationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardValidationRequest(AttachedCardValidationRequest other) : this() {
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardValidationRequest Clone() {
      return new AttachedCardValidationRequest(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachedCardValidationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachedCardValidationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachedCardValidationRequest other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttachedCardValidationResponse : pb::IMessage<AttachedCardValidationResponse> {
    private static readonly pb::MessageParser<AttachedCardValidationResponse> _parser = new pb::MessageParser<AttachedCardValidationResponse>(() => new AttachedCardValidationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachedCardValidationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardValidationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardValidationResponse(AttachedCardValidationResponse other) : this() {
      isValid_ = other.isValid_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardValidationResponse Clone() {
      return new AttachedCardValidationResponse(this);
    }

    /// <summary>Field number for the "IsValid" field.</summary>
    public const int IsValidFieldNumber = 1;
    private bool isValid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsValid {
      get { return isValid_; }
      set {
        isValid_ = value;
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachedCardValidationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachedCardValidationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsValid != other.IsValid) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsValid != false) hash ^= IsValid.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsValid != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsValid);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsValid != false) {
        size += 1 + 1;
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachedCardValidationResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsValid != false) {
        IsValid = other.IsValid;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsValid = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CardBindingPaymentRequest : pb::IMessage<CardBindingPaymentRequest> {
    private static readonly pb::MessageParser<CardBindingPaymentRequest> _parser = new pb::MessageParser<CardBindingPaymentRequest>(() => new CardBindingPaymentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardBindingPaymentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardBindingPaymentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardBindingPaymentRequest(CardBindingPaymentRequest other) : this() {
      mdOrder_ = other.mdOrder_;
      bindingId_ = other.bindingId_;
      language_ = other.language_;
      userId_ = other.userId_;
      amount_ = other.amount_;
      pageView_ = other.pageView_;
      customerNumber_ = other.customerNumber_;
      currency_ = other.currency_;
      orderType_ = other.orderType_;
      orderSubType_ = other.orderSubType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardBindingPaymentRequest Clone() {
      return new CardBindingPaymentRequest(this);
    }

    /// <summary>Field number for the "MdOrder" field.</summary>
    public const int MdOrderFieldNumber = 1;
    private string mdOrder_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MdOrder {
      get { return mdOrder_; }
      set {
        mdOrder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BindingId" field.</summary>
    public const int BindingIdFieldNumber = 2;
    private string bindingId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BindingId {
      get { return bindingId_; }
      set {
        bindingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Language" field.</summary>
    public const int LanguageFieldNumber = 3;
    private string language_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 4;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "Amount" field.</summary>
    public const int AmountFieldNumber = 5;
    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "PageView" field.</summary>
    public const int PageViewFieldNumber = 6;
    private string pageView_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageView {
      get { return pageView_; }
      set {
        pageView_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CustomerNumber" field.</summary>
    public const int CustomerNumberFieldNumber = 7;
    private ulong customerNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CustomerNumber {
      get { return customerNumber_; }
      set {
        customerNumber_ = value;
      }
    }

    /// <summary>Field number for the "Currency" field.</summary>
    public const int CurrencyFieldNumber = 8;
    private string currency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OrderType" field.</summary>
    public const int OrderTypeFieldNumber = 9;
    private global::ArcaCardAttachmentService.CardBindingPaymentRequest.Types.OrderTypeEnum orderType_ = global::ArcaCardAttachmentService.CardBindingPaymentRequest.Types.OrderTypeEnum.NotDefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ArcaCardAttachmentService.CardBindingPaymentRequest.Types.OrderTypeEnum OrderType {
      get { return orderType_; }
      set {
        orderType_ = value;
      }
    }

    /// <summary>Field number for the "OrderSubType" field.</summary>
    public const int OrderSubTypeFieldNumber = 10;
    private int orderSubType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderSubType {
      get { return orderSubType_; }
      set {
        orderSubType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardBindingPaymentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardBindingPaymentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MdOrder != other.MdOrder) return false;
      if (BindingId != other.BindingId) return false;
      if (Language != other.Language) return false;
      if (UserId != other.UserId) return false;
      if (Amount != other.Amount) return false;
      if (PageView != other.PageView) return false;
      if (CustomerNumber != other.CustomerNumber) return false;
      if (Currency != other.Currency) return false;
      if (OrderType != other.OrderType) return false;
      if (OrderSubType != other.OrderSubType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MdOrder.Length != 0) hash ^= MdOrder.GetHashCode();
      if (BindingId.Length != 0) hash ^= BindingId.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (PageView.Length != 0) hash ^= PageView.GetHashCode();
      if (CustomerNumber != 0UL) hash ^= CustomerNumber.GetHashCode();
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (OrderType != global::ArcaCardAttachmentService.CardBindingPaymentRequest.Types.OrderTypeEnum.NotDefined) hash ^= OrderType.GetHashCode();
      if (OrderSubType != 0) hash ^= OrderSubType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MdOrder.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MdOrder);
      }
      if (BindingId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BindingId);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Language);
      }
      if (UserId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UserId);
      }
      if (Amount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Amount);
      }
      if (PageView.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PageView);
      }
      if (CustomerNumber != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(CustomerNumber);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Currency);
      }
      if (OrderType != global::ArcaCardAttachmentService.CardBindingPaymentRequest.Types.OrderTypeEnum.NotDefined) {
        output.WriteRawTag(72);
        output.WriteEnum((int) OrderType);
      }
      if (OrderSubType != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(OrderSubType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MdOrder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MdOrder);
      }
      if (BindingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BindingId);
      }
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (PageView.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageView);
      }
      if (CustomerNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CustomerNumber);
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (OrderType != global::ArcaCardAttachmentService.CardBindingPaymentRequest.Types.OrderTypeEnum.NotDefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderType);
      }
      if (OrderSubType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderSubType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardBindingPaymentRequest other) {
      if (other == null) {
        return;
      }
      if (other.MdOrder.Length != 0) {
        MdOrder = other.MdOrder;
      }
      if (other.BindingId.Length != 0) {
        BindingId = other.BindingId;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      if (other.PageView.Length != 0) {
        PageView = other.PageView;
      }
      if (other.CustomerNumber != 0UL) {
        CustomerNumber = other.CustomerNumber;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.OrderType != global::ArcaCardAttachmentService.CardBindingPaymentRequest.Types.OrderTypeEnum.NotDefined) {
        OrderType = other.OrderType;
      }
      if (other.OrderSubType != 0) {
        OrderSubType = other.OrderSubType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MdOrder = input.ReadString();
            break;
          }
          case 18: {
            BindingId = input.ReadString();
            break;
          }
          case 26: {
            Language = input.ReadString();
            break;
          }
          case 32: {
            UserId = input.ReadInt32();
            break;
          }
          case 40: {
            Amount = input.ReadInt32();
            break;
          }
          case 50: {
            PageView = input.ReadString();
            break;
          }
          case 56: {
            CustomerNumber = input.ReadUInt64();
            break;
          }
          case 66: {
            Currency = input.ReadString();
            break;
          }
          case 72: {
            OrderType = (global::ArcaCardAttachmentService.CardBindingPaymentRequest.Types.OrderTypeEnum) input.ReadEnum();
            break;
          }
          case 80: {
            OrderSubType = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CardBindingPaymentRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum OrderTypeEnum {
        [pbr::OriginalName("ORDER_TYPE_ENUM_NotDefined")] NotDefined = 0,
        [pbr::OriginalName("ORDER_TYPE_ENUM_RaTransfer")] RaTransfer = 1,
        [pbr::OriginalName("ORDER_TYPE_ENUM_LoanMature")] LoanMature = 2,
        [pbr::OriginalName("ORDER_TYPE_ENUM_CommunalPayment")] CommunalPayment = 3,
        [pbr::OriginalName("ORDER_TYPE_ENUM_CardToCardOrder")] CardToCardOrder = 4,
      }

    }
    #endregion

  }

  public sealed partial class CardBindingPaymentResponse : pb::IMessage<CardBindingPaymentResponse> {
    private static readonly pb::MessageParser<CardBindingPaymentResponse> _parser = new pb::MessageParser<CardBindingPaymentResponse>(() => new CardBindingPaymentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardBindingPaymentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardBindingPaymentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardBindingPaymentResponse(CardBindingPaymentResponse other) : this() {
      payed_ = other.payed_;
      cardId_ = other.cardId_;
      mdOrder_ = other.mdOrder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardBindingPaymentResponse Clone() {
      return new CardBindingPaymentResponse(this);
    }

    /// <summary>Field number for the "Payed" field.</summary>
    public const int PayedFieldNumber = 1;
    private bool payed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Payed {
      get { return payed_; }
      set {
        payed_ = value;
      }
    }

    /// <summary>Field number for the "CardId" field.</summary>
    public const int CardIdFieldNumber = 2;
    private int cardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "MdOrder" field.</summary>
    public const int MdOrderFieldNumber = 3;
    private string mdOrder_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MdOrder {
      get { return mdOrder_; }
      set {
        mdOrder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardBindingPaymentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardBindingPaymentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payed != other.Payed) return false;
      if (CardId != other.CardId) return false;
      if (MdOrder != other.MdOrder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payed != false) hash ^= Payed.GetHashCode();
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (MdOrder.Length != 0) hash ^= MdOrder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Payed != false) {
        output.WriteRawTag(8);
        output.WriteBool(Payed);
      }
      if (CardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CardId);
      }
      if (MdOrder.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MdOrder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payed != false) {
        size += 1 + 1;
      }
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardId);
      }
      if (MdOrder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MdOrder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardBindingPaymentResponse other) {
      if (other == null) {
        return;
      }
      if (other.Payed != false) {
        Payed = other.Payed;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.MdOrder.Length != 0) {
        MdOrder = other.MdOrder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Payed = input.ReadBool();
            break;
          }
          case 16: {
            CardId = input.ReadInt32();
            break;
          }
          case 26: {
            MdOrder = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttachedCardOrderTypeRequest : pb::IMessage<AttachedCardOrderTypeRequest> {
    private static readonly pb::MessageParser<AttachedCardOrderTypeRequest> _parser = new pb::MessageParser<AttachedCardOrderTypeRequest>(() => new AttachedCardOrderTypeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachedCardOrderTypeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardOrderTypeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardOrderTypeRequest(AttachedCardOrderTypeRequest other) : this() {
      orderType_ = other.orderType_;
      orderSubType_ = other.orderSubType_;
      currency_ = other.currency_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedCardOrderTypeRequest Clone() {
      return new AttachedCardOrderTypeRequest(this);
    }

    /// <summary>Field number for the "OrderType" field.</summary>
    public const int OrderTypeFieldNumber = 1;
    private int orderType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderType {
      get { return orderType_; }
      set {
        orderType_ = value;
      }
    }

    /// <summary>Field number for the "OrderSubType" field.</summary>
    public const int OrderSubTypeFieldNumber = 2;
    private int orderSubType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderSubType {
      get { return orderSubType_; }
      set {
        orderSubType_ = value;
      }
    }

    /// <summary>Field number for the "Currency" field.</summary>
    public const int CurrencyFieldNumber = 3;
    private string currency_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachedCardOrderTypeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachedCardOrderTypeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderType != other.OrderType) return false;
      if (OrderSubType != other.OrderSubType) return false;
      if (Currency != other.Currency) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderType != 0) hash ^= OrderType.GetHashCode();
      if (OrderSubType != 0) hash ^= OrderSubType.GetHashCode();
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(OrderType);
      }
      if (OrderSubType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OrderSubType);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Currency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderType);
      }
      if (OrderSubType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderSubType);
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachedCardOrderTypeRequest other) {
      if (other == null) {
        return;
      }
      if (other.OrderType != 0) {
        OrderType = other.OrderType;
      }
      if (other.OrderSubType != 0) {
        OrderSubType = other.OrderSubType;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OrderType = input.ReadInt32();
            break;
          }
          case 16: {
            OrderSubType = input.ReadInt32();
            break;
          }
          case 26: {
            Currency = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountNumberByOrderTypeResponse : pb::IMessage<AccountNumberByOrderTypeResponse> {
    private static readonly pb::MessageParser<AccountNumberByOrderTypeResponse> _parser = new pb::MessageParser<AccountNumberByOrderTypeResponse>(() => new AccountNumberByOrderTypeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountNumberByOrderTypeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNumberByOrderTypeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNumberByOrderTypeResponse(AccountNumberByOrderTypeResponse other) : this() {
      accountNumber_ = other.accountNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNumberByOrderTypeResponse Clone() {
      return new AccountNumberByOrderTypeResponse(this);
    }

    /// <summary>Field number for the "AccountNumber" field.</summary>
    public const int AccountNumberFieldNumber = 1;
    private string accountNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNumber {
      get { return accountNumber_; }
      set {
        accountNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountNumberByOrderTypeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountNumberByOrderTypeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountNumber != other.AccountNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountNumber.Length != 0) hash ^= AccountNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountNumberByOrderTypeResponse other) {
      if (other == null) {
        return;
      }
      if (other.AccountNumber.Length != 0) {
        AccountNumber = other.AccountNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrderDetailsRequest : pb::IMessage<OrderDetailsRequest> {
    private static readonly pb::MessageParser<OrderDetailsRequest> _parser = new pb::MessageParser<OrderDetailsRequest>(() => new OrderDetailsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderDetailsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetailsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetailsRequest(OrderDetailsRequest other) : this() {
      docID_ = other.docID_;
      cardId_ = other.cardId_;
      mdOrder_ = other.mdOrder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetailsRequest Clone() {
      return new OrderDetailsRequest(this);
    }

    /// <summary>Field number for the "DocID" field.</summary>
    public const int DocIDFieldNumber = 1;
    private long docID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DocID {
      get { return docID_; }
      set {
        docID_ = value;
      }
    }

    /// <summary>Field number for the "CardId" field.</summary>
    public const int CardIdFieldNumber = 2;
    private int cardId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardId {
      get { return cardId_; }
      set {
        cardId_ = value;
      }
    }

    /// <summary>Field number for the "MdOrder" field.</summary>
    public const int MdOrderFieldNumber = 3;
    private string mdOrder_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MdOrder {
      get { return mdOrder_; }
      set {
        mdOrder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderDetailsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderDetailsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DocID != other.DocID) return false;
      if (CardId != other.CardId) return false;
      if (MdOrder != other.MdOrder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DocID != 0L) hash ^= DocID.GetHashCode();
      if (CardId != 0) hash ^= CardId.GetHashCode();
      if (MdOrder.Length != 0) hash ^= MdOrder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DocID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DocID);
      }
      if (CardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CardId);
      }
      if (MdOrder.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MdOrder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DocID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DocID);
      }
      if (CardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardId);
      }
      if (MdOrder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MdOrder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderDetailsRequest other) {
      if (other == null) {
        return;
      }
      if (other.DocID != 0L) {
        DocID = other.DocID;
      }
      if (other.CardId != 0) {
        CardId = other.CardId;
      }
      if (other.MdOrder.Length != 0) {
        MdOrder = other.MdOrder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DocID = input.ReadInt64();
            break;
          }
          case 16: {
            CardId = input.ReadInt32();
            break;
          }
          case 26: {
            MdOrder = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrderDetailsResponse : pb::IMessage<OrderDetailsResponse> {
    private static readonly pb::MessageParser<OrderDetailsResponse> _parser = new pb::MessageParser<OrderDetailsResponse>(() => new OrderDetailsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderDetailsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetailsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetailsResponse(OrderDetailsResponse other) : this() {
      saved_ = other.saved_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetailsResponse Clone() {
      return new OrderDetailsResponse(this);
    }

    /// <summary>Field number for the "Saved" field.</summary>
    public const int SavedFieldNumber = 1;
    private bool saved_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Saved {
      get { return saved_; }
      set {
        saved_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderDetailsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderDetailsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Saved != other.Saved) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Saved != false) hash ^= Saved.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Saved != false) {
        output.WriteRawTag(8);
        output.WriteBool(Saved);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Saved != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderDetailsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Saved != false) {
        Saved = other.Saved;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Saved = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReverseOrderRequest : pb::IMessage<ReverseOrderRequest> {
    private static readonly pb::MessageParser<ReverseOrderRequest> _parser = new pb::MessageParser<ReverseOrderRequest>(() => new ReverseOrderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReverseOrderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReverseOrderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReverseOrderRequest(ReverseOrderRequest other) : this() {
      mdOrder_ = other.mdOrder_;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReverseOrderRequest Clone() {
      return new ReverseOrderRequest(this);
    }

    /// <summary>Field number for the "MdOrder" field.</summary>
    public const int MdOrderFieldNumber = 1;
    private string mdOrder_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MdOrder {
      get { return mdOrder_; }
      set {
        mdOrder_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReverseOrderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReverseOrderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MdOrder != other.MdOrder) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MdOrder.Length != 0) hash ^= MdOrder.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MdOrder.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MdOrder);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MdOrder.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MdOrder);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReverseOrderRequest other) {
      if (other == null) {
        return;
      }
      if (other.MdOrder.Length != 0) {
        MdOrder = other.MdOrder;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MdOrder = input.ReadString();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReverseOrderResponse : pb::IMessage<ReverseOrderResponse> {
    private static readonly pb::MessageParser<ReverseOrderResponse> _parser = new pb::MessageParser<ReverseOrderResponse>(() => new ReverseOrderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReverseOrderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReverseOrderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReverseOrderResponse(ReverseOrderResponse other) : this() {
      reversed_ = other.reversed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReverseOrderResponse Clone() {
      return new ReverseOrderResponse(this);
    }

    /// <summary>Field number for the "Reversed" field.</summary>
    public const int ReversedFieldNumber = 1;
    private bool reversed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reversed {
      get { return reversed_; }
      set {
        reversed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReverseOrderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReverseOrderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reversed != other.Reversed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Reversed != false) hash ^= Reversed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Reversed != false) {
        output.WriteRawTag(8);
        output.WriteBool(Reversed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Reversed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReverseOrderResponse other) {
      if (other == null) {
        return;
      }
      if (other.Reversed != false) {
        Reversed = other.Reversed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Reversed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
