// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/ArcaCard.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace ArcaCardAttachmentService {
  /// <summary>
  /// The arca card service definition.
  /// </summary>
  public static partial class ArcaCard
  {
    static readonly string __ServiceName = "ArcaCard.ArcaCard";

    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.CardAttachmentRequest> __Marshaller_ArcaCard_CardAttachmentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.CardAttachmentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.CardAttachmentResponse> __Marshaller_ArcaCard_CardAttachmentResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.CardAttachmentResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.CardAttachmentCompletionRequest> __Marshaller_ArcaCard_CardAttachmentCompletionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.CardAttachmentCompletionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.CardAttachmentCompletionResponse> __Marshaller_ArcaCard_CardAttachmentCompletionResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.CardAttachmentCompletionResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.DeleteAttachedCardRequest> __Marshaller_ArcaCard_DeleteAttachedCardRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.DeleteAttachedCardRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.DeleteAttachedCardResponse> __Marshaller_ArcaCard_DeleteAttachedCardResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.DeleteAttachedCardResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.AttachedCardRequest> __Marshaller_ArcaCard_AttachedCardRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.AttachedCardRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.AttachedCardResponse> __Marshaller_ArcaCard_AttachedCardResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.AttachedCardResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.AttachedCardValidationRequest> __Marshaller_ArcaCard_AttachedCardValidationRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.AttachedCardValidationRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.AttachedCardValidationResponse> __Marshaller_ArcaCard_AttachedCardValidationResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.AttachedCardValidationResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.CardBindingPaymentRequest> __Marshaller_ArcaCard_CardBindingPaymentRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.CardBindingPaymentRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.CardBindingPaymentResponse> __Marshaller_ArcaCard_CardBindingPaymentResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.CardBindingPaymentResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.AttachedCardOrderTypeRequest> __Marshaller_ArcaCard_AttachedCardOrderTypeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.AttachedCardOrderTypeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.AccountNumberByOrderTypeResponse> __Marshaller_ArcaCard_AccountNumberByOrderTypeResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.AccountNumberByOrderTypeResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.OrderDetailsRequest> __Marshaller_ArcaCard_OrderDetailsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.OrderDetailsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.OrderDetailsResponse> __Marshaller_ArcaCard_OrderDetailsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.OrderDetailsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.ReverseOrderRequest> __Marshaller_ArcaCard_ReverseOrderRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.ReverseOrderRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::ArcaCardAttachmentService.ReverseOrderResponse> __Marshaller_ArcaCard_ReverseOrderResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ArcaCardAttachmentService.ReverseOrderResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::ArcaCardAttachmentService.CardAttachmentRequest, global::ArcaCardAttachmentService.CardAttachmentResponse> __Method_AtachCardOrder = new grpc::Method<global::ArcaCardAttachmentService.CardAttachmentRequest, global::ArcaCardAttachmentService.CardAttachmentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AtachCardOrder",
        __Marshaller_ArcaCard_CardAttachmentRequest,
        __Marshaller_ArcaCard_CardAttachmentResponse);

    static readonly grpc::Method<global::ArcaCardAttachmentService.CardAttachmentCompletionRequest, global::ArcaCardAttachmentService.CardAttachmentCompletionResponse> __Method_AtachCardOrderCompletion = new grpc::Method<global::ArcaCardAttachmentService.CardAttachmentCompletionRequest, global::ArcaCardAttachmentService.CardAttachmentCompletionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AtachCardOrderCompletion",
        __Marshaller_ArcaCard_CardAttachmentCompletionRequest,
        __Marshaller_ArcaCard_CardAttachmentCompletionResponse);

    static readonly grpc::Method<global::ArcaCardAttachmentService.DeleteAttachedCardRequest, global::ArcaCardAttachmentService.DeleteAttachedCardResponse> __Method_DeleteAttachedCardById = new grpc::Method<global::ArcaCardAttachmentService.DeleteAttachedCardRequest, global::ArcaCardAttachmentService.DeleteAttachedCardResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAttachedCardById",
        __Marshaller_ArcaCard_DeleteAttachedCardRequest,
        __Marshaller_ArcaCard_DeleteAttachedCardResponse);

    static readonly grpc::Method<global::ArcaCardAttachmentService.AttachedCardRequest, global::ArcaCardAttachmentService.AttachedCardResponse> __Method_GetAttachedCards = new grpc::Method<global::ArcaCardAttachmentService.AttachedCardRequest, global::ArcaCardAttachmentService.AttachedCardResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAttachedCards",
        __Marshaller_ArcaCard_AttachedCardRequest,
        __Marshaller_ArcaCard_AttachedCardResponse);

    static readonly grpc::Method<global::ArcaCardAttachmentService.AttachedCardValidationRequest, global::ArcaCardAttachmentService.AttachedCardValidationResponse> __Method_ValidateAttachedCards = new grpc::Method<global::ArcaCardAttachmentService.AttachedCardValidationRequest, global::ArcaCardAttachmentService.AttachedCardValidationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidateAttachedCards",
        __Marshaller_ArcaCard_AttachedCardValidationRequest,
        __Marshaller_ArcaCard_AttachedCardValidationResponse);

    static readonly grpc::Method<global::ArcaCardAttachmentService.CardBindingPaymentRequest, global::ArcaCardAttachmentService.CardBindingPaymentResponse> __Method_ArcaOrderBindingPayment = new grpc::Method<global::ArcaCardAttachmentService.CardBindingPaymentRequest, global::ArcaCardAttachmentService.CardBindingPaymentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ArcaOrderBindingPayment",
        __Marshaller_ArcaCard_CardBindingPaymentRequest,
        __Marshaller_ArcaCard_CardBindingPaymentResponse);

    static readonly grpc::Method<global::ArcaCardAttachmentService.AttachedCardOrderTypeRequest, global::ArcaCardAttachmentService.AccountNumberByOrderTypeResponse> __Method_GetMerchantAccountNumberByOrderType = new grpc::Method<global::ArcaCardAttachmentService.AttachedCardOrderTypeRequest, global::ArcaCardAttachmentService.AccountNumberByOrderTypeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMerchantAccountNumberByOrderType",
        __Marshaller_ArcaCard_AttachedCardOrderTypeRequest,
        __Marshaller_ArcaCard_AccountNumberByOrderTypeResponse);

    static readonly grpc::Method<global::ArcaCardAttachmentService.OrderDetailsRequest, global::ArcaCardAttachmentService.OrderDetailsResponse> __Method_SaveAttachedCardOrderDetails = new grpc::Method<global::ArcaCardAttachmentService.OrderDetailsRequest, global::ArcaCardAttachmentService.OrderDetailsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SaveAttachedCardOrderDetails",
        __Marshaller_ArcaCard_OrderDetailsRequest,
        __Marshaller_ArcaCard_OrderDetailsResponse);

    static readonly grpc::Method<global::ArcaCardAttachmentService.ReverseOrderRequest, global::ArcaCardAttachmentService.ReverseOrderResponse> __Method_ReverseOrderById = new grpc::Method<global::ArcaCardAttachmentService.ReverseOrderRequest, global::ArcaCardAttachmentService.ReverseOrderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReverseOrderById",
        __Marshaller_ArcaCard_ReverseOrderRequest,
        __Marshaller_ArcaCard_ReverseOrderResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::ArcaCardAttachmentService.ArcaCardReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for ArcaCard</summary>
    public partial class ArcaCardClient : grpc::ClientBase<ArcaCardClient>
    {
      /// <summary>Creates a new client for ArcaCard</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ArcaCardClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ArcaCard that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ArcaCardClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ArcaCardClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ArcaCardClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// attach card
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.CardAttachmentResponse AtachCardOrder(global::ArcaCardAttachmentService.CardAttachmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AtachCardOrder(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// attach card
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.CardAttachmentResponse AtachCardOrder(global::ArcaCardAttachmentService.CardAttachmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AtachCardOrder, null, options, request);
      }
      /// <summary>
      /// attach card
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.CardAttachmentResponse> AtachCardOrderAsync(global::ArcaCardAttachmentService.CardAttachmentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AtachCardOrderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// attach card
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.CardAttachmentResponse> AtachCardOrderAsync(global::ArcaCardAttachmentService.CardAttachmentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AtachCardOrder, null, options, request);
      }
      /// <summary>
      /// attach card completion
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.CardAttachmentCompletionResponse AtachCardOrderCompletion(global::ArcaCardAttachmentService.CardAttachmentCompletionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AtachCardOrderCompletion(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// attach card completion
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.CardAttachmentCompletionResponse AtachCardOrderCompletion(global::ArcaCardAttachmentService.CardAttachmentCompletionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AtachCardOrderCompletion, null, options, request);
      }
      /// <summary>
      /// attach card completion
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.CardAttachmentCompletionResponse> AtachCardOrderCompletionAsync(global::ArcaCardAttachmentService.CardAttachmentCompletionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AtachCardOrderCompletionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// attach card completion
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.CardAttachmentCompletionResponse> AtachCardOrderCompletionAsync(global::ArcaCardAttachmentService.CardAttachmentCompletionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AtachCardOrderCompletion, null, options, request);
      }
      /// <summary>
      ///Delete Attached Card
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.DeleteAttachedCardResponse DeleteAttachedCardById(global::ArcaCardAttachmentService.DeleteAttachedCardRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAttachedCardById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Delete Attached Card
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.DeleteAttachedCardResponse DeleteAttachedCardById(global::ArcaCardAttachmentService.DeleteAttachedCardRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAttachedCardById, null, options, request);
      }
      /// <summary>
      ///Delete Attached Card
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.DeleteAttachedCardResponse> DeleteAttachedCardByIdAsync(global::ArcaCardAttachmentService.DeleteAttachedCardRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAttachedCardByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Delete Attached Card
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.DeleteAttachedCardResponse> DeleteAttachedCardByIdAsync(global::ArcaCardAttachmentService.DeleteAttachedCardRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAttachedCardById, null, options, request);
      }
      /// <summary>
      ///Get Attached Cards
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.AttachedCardResponse GetAttachedCards(global::ArcaCardAttachmentService.AttachedCardRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttachedCards(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Get Attached Cards
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.AttachedCardResponse GetAttachedCards(global::ArcaCardAttachmentService.AttachedCardRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAttachedCards, null, options, request);
      }
      /// <summary>
      ///Get Attached Cards
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.AttachedCardResponse> GetAttachedCardsAsync(global::ArcaCardAttachmentService.AttachedCardRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAttachedCardsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Get Attached Cards
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.AttachedCardResponse> GetAttachedCardsAsync(global::ArcaCardAttachmentService.AttachedCardRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAttachedCards, null, options, request);
      }
      /// <summary>
      ///Validate Attached Cards
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.AttachedCardValidationResponse ValidateAttachedCards(global::ArcaCardAttachmentService.AttachedCardValidationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateAttachedCards(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Validate Attached Cards
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.AttachedCardValidationResponse ValidateAttachedCards(global::ArcaCardAttachmentService.AttachedCardValidationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidateAttachedCards, null, options, request);
      }
      /// <summary>
      ///Validate Attached Cards
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.AttachedCardValidationResponse> ValidateAttachedCardsAsync(global::ArcaCardAttachmentService.AttachedCardValidationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateAttachedCardsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Validate Attached Cards
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.AttachedCardValidationResponse> ValidateAttachedCardsAsync(global::ArcaCardAttachmentService.AttachedCardValidationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidateAttachedCards, null, options, request);
      }
      /// <summary>
      ///Payment By Binding
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.CardBindingPaymentResponse ArcaOrderBindingPayment(global::ArcaCardAttachmentService.CardBindingPaymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ArcaOrderBindingPayment(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Payment By Binding
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.CardBindingPaymentResponse ArcaOrderBindingPayment(global::ArcaCardAttachmentService.CardBindingPaymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ArcaOrderBindingPayment, null, options, request);
      }
      /// <summary>
      ///Payment By Binding
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.CardBindingPaymentResponse> ArcaOrderBindingPaymentAsync(global::ArcaCardAttachmentService.CardBindingPaymentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ArcaOrderBindingPaymentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Payment By Binding
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.CardBindingPaymentResponse> ArcaOrderBindingPaymentAsync(global::ArcaCardAttachmentService.CardBindingPaymentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ArcaOrderBindingPayment, null, options, request);
      }
      /// <summary>
      ///Get Merchant Account Number by order type
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.AccountNumberByOrderTypeResponse GetMerchantAccountNumberByOrderType(global::ArcaCardAttachmentService.AttachedCardOrderTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMerchantAccountNumberByOrderType(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Get Merchant Account Number by order type
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.AccountNumberByOrderTypeResponse GetMerchantAccountNumberByOrderType(global::ArcaCardAttachmentService.AttachedCardOrderTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMerchantAccountNumberByOrderType, null, options, request);
      }
      /// <summary>
      ///Get Merchant Account Number by order type
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.AccountNumberByOrderTypeResponse> GetMerchantAccountNumberByOrderTypeAsync(global::ArcaCardAttachmentService.AttachedCardOrderTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMerchantAccountNumberByOrderTypeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Get Merchant Account Number by order type
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.AccountNumberByOrderTypeResponse> GetMerchantAccountNumberByOrderTypeAsync(global::ArcaCardAttachmentService.AttachedCardOrderTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMerchantAccountNumberByOrderType, null, options, request);
      }
      /// <summary>
      ///Save Attach Card Payment Order Details
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.OrderDetailsResponse SaveAttachedCardOrderDetails(global::ArcaCardAttachmentService.OrderDetailsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SaveAttachedCardOrderDetails(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Save Attach Card Payment Order Details
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.OrderDetailsResponse SaveAttachedCardOrderDetails(global::ArcaCardAttachmentService.OrderDetailsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SaveAttachedCardOrderDetails, null, options, request);
      }
      /// <summary>
      ///Save Attach Card Payment Order Details
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.OrderDetailsResponse> SaveAttachedCardOrderDetailsAsync(global::ArcaCardAttachmentService.OrderDetailsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SaveAttachedCardOrderDetailsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Save Attach Card Payment Order Details
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.OrderDetailsResponse> SaveAttachedCardOrderDetailsAsync(global::ArcaCardAttachmentService.OrderDetailsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SaveAttachedCardOrderDetails, null, options, request);
      }
      /// <summary>
      ///Reverse Payment Order
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.ReverseOrderResponse ReverseOrderById(global::ArcaCardAttachmentService.ReverseOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReverseOrderById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Reverse Payment Order
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::ArcaCardAttachmentService.ReverseOrderResponse ReverseOrderById(global::ArcaCardAttachmentService.ReverseOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReverseOrderById, null, options, request);
      }
      /// <summary>
      ///Reverse Payment Order
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.ReverseOrderResponse> ReverseOrderByIdAsync(global::ArcaCardAttachmentService.ReverseOrderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReverseOrderByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Reverse Payment Order
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::ArcaCardAttachmentService.ReverseOrderResponse> ReverseOrderByIdAsync(global::ArcaCardAttachmentService.ReverseOrderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReverseOrderById, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ArcaCardClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ArcaCardClient(configuration);
      }
    }

  }
}
#endregion
