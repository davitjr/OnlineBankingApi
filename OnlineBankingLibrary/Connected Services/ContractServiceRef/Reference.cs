//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ContractServiceRef
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contract", Namespace="http://schemas.datacontract.org/2004/07/ContractService")]
    public partial class Contract : object
    {
        
        private System.Collections.Generic.List<ContractServiceRef.StringKeyValueArray> ArraysListField;
        
        private int AttachDocTypeField;
        
        private byte AttachFileField;
        
        private int AttachSourceTypeField;
        
        private string ContractNameField;
        
        private int DocIDField;
        
        private string ExtensionField;
        
        private int FooterHeightForContractsField;
        
        private System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, string>> FormulasListField;
        
        private bool IsFilledField;
        
        private string NewGUIDField;
        
        private System.Collections.Generic.List<ContractServiceRef.StringKeyValue> ParametersListField;
        
        private string ProductNumberField;
        
        private string contentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ContractServiceRef.StringKeyValueArray> ArraysList
        {
            get
            {
                return this.ArraysListField;
            }
            set
            {
                this.ArraysListField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttachDocType
        {
            get
            {
                return this.AttachDocTypeField;
            }
            set
            {
                this.AttachDocTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AttachFile
        {
            get
            {
                return this.AttachFileField;
            }
            set
            {
                this.AttachFileField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttachSourceType
        {
            get
            {
                return this.AttachSourceTypeField;
            }
            set
            {
                this.AttachSourceTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractName
        {
            get
            {
                return this.ContractNameField;
            }
            set
            {
                this.ContractNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocID
        {
            get
            {
                return this.DocIDField;
            }
            set
            {
                this.DocIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extension
        {
            get
            {
                return this.ExtensionField;
            }
            set
            {
                this.ExtensionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FooterHeightForContracts
        {
            get
            {
                return this.FooterHeightForContractsField;
            }
            set
            {
                this.FooterHeightForContractsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<string, string>> FormulasList
        {
            get
            {
                return this.FormulasListField;
            }
            set
            {
                this.FormulasListField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFilled
        {
            get
            {
                return this.IsFilledField;
            }
            set
            {
                this.IsFilledField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewGUID
        {
            get
            {
                return this.NewGUIDField;
            }
            set
            {
                this.NewGUIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ContractServiceRef.StringKeyValue> ParametersList
        {
            get
            {
                return this.ParametersListField;
            }
            set
            {
                this.ParametersListField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNumber
        {
            get
            {
                return this.ProductNumberField;
            }
            set
            {
                this.ProductNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string content
        {
            get
            {
                return this.contentField;
            }
            set
            {
                this.contentField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StringKeyValueArray", Namespace="http://schemas.datacontract.org/2004/07/ContractService")]
    public partial class StringKeyValueArray : object
    {
        
        private string KeyField;
        
        private System.Collections.Generic.List<string> ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key
        {
            get
            {
                return this.KeyField;
            }
            set
            {
                this.KeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StringKeyValue", Namespace="http://schemas.datacontract.org/2004/07/ContractService")]
    public partial class StringKeyValue : object
    {
        
        private string KeyField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key
        {
            get
            {
                return this.KeyField;
            }
            set
            {
                this.KeyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ContractServiceRef.IContractOerationService")]
    public interface IContractOerationService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractOerationService/DownloadContract", ReplyAction="http://tempuri.org/IContractOerationService/DownloadContractResponse")]
        System.Threading.Tasks.Task<byte[]> DownloadContractAsync(ContractServiceRef.Contract contract, string userName, string ClientIp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractOerationService/DownloadContractWORD", ReplyAction="http://tempuri.org/IContractOerationService/DownloadContractWORDResponse")]
        System.Threading.Tasks.Task<byte[]> DownloadContractWORDAsync(ContractServiceRef.Contract contract, string userName, string ClientIp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractOerationService/DownloadContractHTML", ReplyAction="http://tempuri.org/IContractOerationService/DownloadContractHTMLResponse")]
        System.Threading.Tasks.Task<string> DownloadContractHTMLAsync(ContractServiceRef.Contract contract, string userName, string ClientIp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractOerationService/DownloadEmployeesContractWord", ReplyAction="http://tempuri.org/IContractOerationService/DownloadEmployeesContractWordResponse" +
            "")]
        System.Threading.Tasks.Task<byte[]> DownloadEmployeesContractWordAsync(ContractServiceRef.Contract contract, string userName, string ClientIp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContractOerationService/CheckProgramVersion", ReplyAction="http://tempuri.org/IContractOerationService/CheckProgramVersionResponse")]
        System.Threading.Tasks.Task<bool> CheckProgramVersionAsync(short programId, System.Version version);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IContractOerationServiceChannel : ContractServiceRef.IContractOerationService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ContractOerationServiceClient : System.ServiceModel.ClientBase<ContractServiceRef.IContractOerationService>, ContractServiceRef.IContractOerationService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ContractOerationServiceClient() : 
                base(ContractOerationServiceClient.GetDefaultBinding(), ContractOerationServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.IContractOperationService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ContractOerationServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ContractOerationServiceClient.GetBindingForEndpoint(endpointConfiguration), ContractOerationServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ContractOerationServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ContractOerationServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ContractOerationServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ContractOerationServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ContractOerationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<byte[]> DownloadContractAsync(ContractServiceRef.Contract contract, string userName, string ClientIp)
        {
            return base.Channel.DownloadContractAsync(contract, userName, ClientIp);
        }
        
        public System.Threading.Tasks.Task<byte[]> DownloadContractWORDAsync(ContractServiceRef.Contract contract, string userName, string ClientIp)
        {
            return base.Channel.DownloadContractWORDAsync(contract, userName, ClientIp);
        }
        
        public System.Threading.Tasks.Task<string> DownloadContractHTMLAsync(ContractServiceRef.Contract contract, string userName, string ClientIp)
        {
            return base.Channel.DownloadContractHTMLAsync(contract, userName, ClientIp);
        }
        
        public System.Threading.Tasks.Task<byte[]> DownloadEmployeesContractWordAsync(ContractServiceRef.Contract contract, string userName, string ClientIp)
        {
            return base.Channel.DownloadEmployeesContractWordAsync(contract, userName, ClientIp);
        }
        
        public System.Threading.Tasks.Task<bool> CheckProgramVersionAsync(short programId, System.Version version)
        {
            return base.Channel.CheckProgramVersionAsync(programId, version);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.IContractOperationService))
            {
                System.ServiceModel.NetTcpBinding result = new System.ServiceModel.NetTcpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.IContractOperationService))
            {
                return new System.ServiceModel.EndpointAddress(new System.Uri("net.tcp://webc021:9011/ContractOerationService.svc/ContractOperation"), new System.ServiceModel.DnsEndpointIdentity("localhost"));
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ContractOerationServiceClient.GetBindingForEndpoint(EndpointConfiguration.IContractOperationService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ContractOerationServiceClient.GetEndpointAddress(EndpointConfiguration.IContractOperationService);
        }
        
        public enum EndpointConfiguration
        {
            
            IContractOperationService,
        }
    }
}
