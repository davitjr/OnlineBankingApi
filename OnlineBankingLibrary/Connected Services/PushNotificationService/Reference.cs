//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PushNotificationService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationToken", Namespace="http://schemas.datacontract.org/2004/07/ExternalBankingSecurityLibrary.PushNotifi" +
        "cationToken")]
    public partial class NotificationToken : object
    {
        
        private System.DateTime ActivationDateField;
        
        private ulong CustomerNumberField;
        
        private byte CustomerTypeField;
        
        private System.Nullable<System.DateTime> DeactivationDateField;
        
        private string DeviceField;
        
        private string DeviceIdField;
        
        private string FirebaseTokenField;
        
        private int IdField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActivationDate
        {
            get
            {
                return this.ActivationDateField;
            }
            set
            {
                this.ActivationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong CustomerNumber
        {
            get
            {
                return this.CustomerNumberField;
            }
            set
            {
                this.CustomerNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte CustomerType
        {
            get
            {
                return this.CustomerTypeField;
            }
            set
            {
                this.CustomerTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeactivationDate
        {
            get
            {
                return this.DeactivationDateField;
            }
            set
            {
                this.DeactivationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Device
        {
            get
            {
                return this.DeviceField;
            }
            set
            {
                this.DeviceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceId
        {
            get
            {
                return this.DeviceIdField;
            }
            set
            {
                this.DeviceIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirebaseToken
        {
            get
            {
                return this.FirebaseTokenField;
            }
            set
            {
                this.FirebaseTokenField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionResult", Namespace="http://schemas.datacontract.org/2004/07/ExternalBankingSecurityLibrary.PushNotifi" +
        "cationToken")]
    public partial class ActionResult : object
    {
        
        private PushNotificationService.ResultCode ActionResultCodeField;
        
        private System.Collections.Generic.List<string> DescriptionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PushNotificationService.ResultCode ActionResultCode
        {
            get
            {
                return this.ActionResultCodeField;
            }
            set
            {
                this.ActionResultCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Descriptions
        {
            get
            {
                return this.DescriptionsField;
            }
            set
            {
                this.DescriptionsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultCode", Namespace="http://schemas.datacontract.org/2004/07/ExternalBankingSecurityLibrary.PushNotifi" +
        "cationToken")]
    public enum ResultCode : short
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Normal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangePassword = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ValidationFailed = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PushNotificationService.INotificationService")]
    public interface INotificationService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INotificationService/SaveNotificationToken", ReplyAction="http://tempuri.org/INotificationService/SaveNotificationTokenResponse")]
        System.Threading.Tasks.Task<PushNotificationService.ActionResult> SaveNotificationTokenAsync(PushNotificationService.NotificationToken notificationToken);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface INotificationServiceChannel : PushNotificationService.INotificationService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class NotificationServiceClient : System.ServiceModel.ClientBase<PushNotificationService.INotificationService>, PushNotificationService.INotificationService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public NotificationServiceClient() : 
                base(NotificationServiceClient.GetDefaultBinding(), NotificationServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_INotificationService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NotificationServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(NotificationServiceClient.GetBindingForEndpoint(endpointConfiguration), NotificationServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NotificationServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(NotificationServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NotificationServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(NotificationServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NotificationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<PushNotificationService.ActionResult> SaveNotificationTokenAsync(PushNotificationService.NotificationToken notificationToken)
        {
            return base.Channel.SaveNotificationTokenAsync(notificationToken);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INotificationService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_INotificationService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/ExternalBankingSecurityService/Services/NotificationService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return NotificationServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_INotificationService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return NotificationServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_INotificationService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_INotificationService,
        }
    }
}
